{"version":3,"file":"static/js/23.73ba382d.chunk.js","mappings":"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","sources":["Components/UI/BackButton/BackButton.jsx","Components/UI/MainButton/MainButton.jsx","Pages/Cart/CartIntro.jsx","Components/UI/Numric/Numric.jsx","Pages/Cart/ProductHor.jsx","Pages/Cart/CartTable.jsx","Pages/Cart/CartTotal.jsx","Pages/Cart/MyCart.jsx"],"sourcesContent":["  // import css files\r\nimport \"./BackButton.css\"\r\n  // import react router components\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function BackButton() {\r\n  return (\r\n    <Link to={\"/\"} className=\"gap10 linkBackWards\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\"/></svg>\r\n      Back To Home Page\r\n    </Link>\r\n  )\r\n}\r\n","  // import css files\r\nimport \"./MainButton.css\"\r\n\r\nexport default function MainButton(props) {\r\n  return (\r\n    <button prid={props.prid} disabled={props.disabled} type={props.type} className={`${props.className} mainButton`} name={props.name} onClick={props.onClick} id={props.id}>{props.children}</button>\r\n  )\r\n}\r\n","  // import redux hooks\r\nimport { useSelector } from \"react-redux\"\r\n  // import data from redux\r\nimport { cartItems } from \"../../Store/AppReduceSlice\"\r\n\r\nexport default function CartIntro() {\r\n    // import count items in the cart from redux\r\n  const Items = useSelector(cartItems)\r\n  return (\r\n    <>\r\n      <h1 className=\"cartLabel\">Cart Shopping</h1>\r\n      <p className=\"descCart\">\r\n        <span className=\"itemsCountInCart\">{Items} items</span> in your cart\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n","\r\n  // import compnents\r\nimport MainButton from \"./../MainButton/MainButton\"\r\n\r\n  // import redux hooks\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\n  // import data form user slice\r\nimport { DecreaseQuantity, getProductQuantity, IncreaseQuantity } from \"./../../../Store/AppReduceSlice\"\r\n  /* props:\r\n    prid: the product id to increase or decrease quantity\r\n  */\r\nexport default function Numric(props) {\r\n    // declare dispatch to use the redux actions\r\n  const dispatch = useDispatch()\r\n    // the initial value of count and counter\r\n  const value = useSelector((state) => getProductQuantity(state , props.prid))\r\n  return (\r\n    <div className=\"row gap10 center\">\r\n      <MainButton prid={props.prid} className={\"secondryBtn\"} onClick={(e) =>{dispatch(IncreaseQuantity(e.target.getAttribute(\"prid\")))}}>+</MainButton>\r\n        <p className=\"quantityCount\">{value}</p>\r\n      <MainButton prid={props.prid} className={\"secondryBtn\"} onClick={(e) =>{dispatch(DecreaseQuantity(e.target.getAttribute(\"prid\")))}}>-</MainButton>\r\n    </div>\r\n  )\r\n}\r\n","  // import components\r\nimport MainButton from \"../../Components/UI/MainButton/MainButton\"\r\n  // import redux hooks\r\nimport { useDispatch } from \"react-redux\"\r\n  // import images\r\nimport ProductImage from \"./../../Assets/Images/ProductImages/Product (1).webp\"\r\n  // import data from redux\r\nimport { PayForAll } from \"../../Store/AppReduceSlice\"\r\n\r\nexport default function ProductHor({product}) {\r\n    // declare dispach to call the actions from redux\r\n  const dispach = useDispatch()\r\n  return (\r\n    <div className=\"productHorCart row between\">\r\n      <div className=\"center\">\r\n        <img width={150} src={ProductImage} alt=\"cactus product you've added to your cart\" />\r\n      </div>\r\n      <div className=\"productHorDetails col gap10\">\r\n        <p className=\"productHorP\">{product.productName}</p>\r\n        <p className=\"productHorP\">{product.productFamily}</p>\r\n        <p className=\"productHorP\">{product.productTemperature}</p>\r\n        <MainButton onClick={() => dispach(PayForAll())}>Remove</MainButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}","  // import components\r\nimport Numric from \"../../Components/UI/Numric/Numric\";\r\nimport ProductHor from \"./ProductHor\";\r\n\r\n  // import redux hooks\r\nimport { useSelector } from \"react-redux\";\r\n\r\n  // import redux data\r\nimport { cart } from \"../../Store/AppReduceSlice\";\r\n\r\n\r\nexport default function CartTable() {\r\n    // declare products in the cart\r\n  const AllProducts = useSelector(cart)\r\n  return (\r\n    <div className=\"tableDivContainer\"> \r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Total Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {/* Loop on the count of products */}\r\n          {AllProducts.map((product) => {\r\n            return  <tr key={product.productId}>\r\n              <th><ProductHor product={product}/></th>\r\n              <th>${product.productPrice}</th>\r\n              <th><Numric prid={product.productId}/></th>\r\n              <th>${product.productPrice * product.productQuantity}</th>\r\n            </tr>\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","  // import redux hooks\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n  // import components\r\nimport MainButton from \"../../Components/UI/MainButton/MainButton\";\r\n  // import data from redux\r\nimport { cart, PayForAll } from \"../../Store/AppReduceSlice\";\r\n  // import react router hooks\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function CartTotal() {\r\n    // declare dispach to call the actions from redux\r\n  const dispach = useDispatch()\r\n  \r\n    // declare navigator to navigate user\r\n  const navigate = useNavigate()\r\n\r\n    // declare products array data from redux\r\n  const Products = useSelector(cart)\r\n  return (\r\n    <div className=\"cartTotalContainer col gap20\">\r\n      <h2 className=\"cartTotalName\">Cart Total</h2>\r\n      <p className=\"between\"><span className=\"titleSpan\">Delivery</span> <span className=\"valueSpan\">Free</span></p>\r\n      <p className=\"between\"><span className=\"titleSpan\">Discount</span> <span className=\"valueSpan\">{\r\n          // calc the discount for all products cart\r\n        Products.reduce((acc , product) => {\r\n          return acc + product.productDiscount * product.productQuantity \r\n        },0)\r\n      }</span></p>\r\n      <p className=\"between\"><span className=\"titleSpan\">Cart Total</span> <span className=\"valueSpan\">{\r\n          // calc the price for all products cart\r\n        Products.reduce((acc , product) => {\r\n          return acc + product.productPrice * product.productQuantity \r\n        },0)\r\n      }</span></p>\r\n      <MainButton onClick={() => dispach(PayForAll())}>Apply</MainButton>\r\n      <MainButton onClick={() => navigate(\"/products\")}>Buy More</MainButton>\r\n    </div>\r\n  )\r\n}\r\n","  // import css files\r\nimport \"./MyCart.css\"\r\n\r\n  // import components\r\nimport BackButton from \"./../../Components/UI/BackButton/BackButton\"\r\nimport CartIntro from \"./CartIntro\"\r\nimport CartTable from \"./CartTable\"\r\nimport CartTotal from \"./CartTotal\"\r\n\r\n  // import redux hooks\r\nimport { useSelector } from \"react-redux\"\r\n\r\n  // import data form redux\r\nimport { cartItems } from \"../../Store/AppReduceSlice\"\r\n\r\nexport default function MyCart() {\r\n    // get the items count to toggle table\r\n  const Items = useSelector(cartItems)\r\n  return (\r\n    <main role=\"main\" className=\"myCartMainContainer col gap20\">\r\n      <section className=\"col gap20\">\r\n        <BackButton/>\r\n        <CartIntro/>\r\n      </section>\r\n        {/* chick if there are any products */}\r\n      {Items > 0?\r\n      <section className=\"tableAndCartTotalContainer row between wrap\">\r\n        <CartTable/>\r\n        <CartTotal/>\r\n      </section>:<></>}\r\n    </main>\r\n  )\r\n}\r\n"],"names":["BackButton","_jsxs","Link","to","className","children","_jsx","xmlns","viewBox","d","MainButton","props","prid","disabled","type","name","onClick","id","CartIntro","Items","useSelector","cartItems","_Fragment","Numric","dispatch","useDispatch","value","state","getProductQuantity","e","IncreaseQuantity","target","getAttribute","DecreaseQuantity","ProductHor","_ref","product","dispach","width","src","ProductImage","alt","productName","productFamily","productTemperature","PayForAll","CartTable","AllProducts","cart","map","productPrice","productId","productQuantity","CartTotal","navigate","useNavigate","Products","reduce","acc","productDiscount","MyCart","role"],"sourceRoot":""}